@page "/drafter/metricinternal/{Id:int}"
@inject IMetricInternalCollection metricInternalData
@inject NavigationManager navManager
@attribute [Authorize]
<h1 class="page-heading text-center">
    Drafter's page for Metric Internal Thread Info Check
</h1>
<h1 class="text-center">
    @metricInternal.CustomThreadDesignition @metricInternal.Classification
</h1>
<h3 class="accordion-body">
    More info & functions can be added to this page with coordination with Quality Planning & Drafting Department
</h3>
<div>
    @if(metricInternal is not null)
    {
        <div>
            <table class="table table-dark table-striped table border-2 table-bordered">
                <thead>
                    <tr class="text-center">
                        <th scope="col">Unit System</th>
                        <th scope="col">Min Minor Diameter</th>
                        <th scope="col">Max Minor Diameter</th>
                        <th scope="col">Min Pitch Diameter</th>
                        <th scope="col">Max Pitch Diameter</th>
                        <th scope="col">Min Major Diameter</th>
                        <th scope="col">Max Major Diameter</th>
                        <th scope="col">Tap Drill Basic</th>
                        <th scope="col">Min Thread Depth</th>
                        <th scope="col">Thread Runouts Max</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="text-center">
                        <th scope="col">Metric System</th>
                        <th scope="col">@(metricInternal.MinorDiaMin)</th>
                        <th scope="col">@(metricInternal.MinorDiaMax)</th>
                        <th scope="col">@(metricInternal.PitchDiaMin)</th>
                        <th scope="col">@(metricInternal.PitchDiaMax)</th>
                        <th scope="col">@(metricInternal.MajorDiaMin)</th>
                        <th scope="col">@(metricInternal.MajorDiaMax)</th>
                        <th scope="col">@(metricInternal.TapDrillBasic)</th>
                        <th scope="col">@(metricInternal.ThreadDepthMin)</th>
                        <th scope="col">@(metricInternal.ThreadRunouts)</th>
                    </tr>
                    <tr class="text-center">
                        <th scope="col">English System</th>
                        <th scope="col">@Math.Round(metricInternal.MinorDiaMin/25.4,4)</th>
                        <th scope="col">@Math.Round(metricInternal.MinorDiaMax/25.4,4)</th>
                        <th scope="col">@Math.Round(metricInternal.PitchDiaMin/25.4,4)</th>
                        <th scope="col">@Math.Round(metricInternal.PitchDiaMax/25.4,4)</th>
                        <th scope="col">@Math.Round(metricInternal.MajorDiaMin/25.4,4)</th>
                        <th scope="col">@Math.Round(metricInternal.MajorDiaMax/25.4,4)</th>
                        <th scope="col">@Math.Round(metricInternal.TapDrillBasic/25.4,4)</th>
                        <th scope="col">@Math.Round(metricInternal.ThreadDepthMin/25.4,4)</th>
                        <th scope="col">@Math.Round(metricInternal.ThreadRunouts/25.4,4)</th>
                    </tr>
                </tbody>
            </table>
        </div>
        <div>
            <table class="table table-dark table-striped table border-2 table-bordered">
                <thead>
                    <tr class="text-center">
                        <th scope="col">Unit System</th>
                        <th scope="col">Chamfer Size Min</th>
                        <th scope="col">Chamfer Size Max</th>
                        <th scope="col">Tap Drill Basic</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="text-center">
                        <th scope="col">Metric System</th>
                        <th scope="col">@(metricInternal.MajorDiaMax)</th>
                        <th scope="col">@(metricInternal.MajorDiaMax + 2)</th>
                        <th scope="col">@(metricInternal.TapDrillBasic)</th>
                    </tr>
                </tbody>
                <tbody>
                    <tr class="text-center">
                        <th scope="col">English System</th>
                        <th scope="col">@Math.Round(metricInternal.MajorDiaMax/25.4,4)</th>
                        <th scope="col">@Math.Round((metricInternal.MajorDiaMax + 2)/25.4,4)</th>
                        <th scope="col">@Math.Round(metricInternal.TapDrillBasic/25.4,4)</th>
                    </tr>
                </tbody>
            </table>
        </div>
        <div>
            <SfLinearGauge>
                <LinearGaugeBorder>

                </LinearGaugeBorder>
            </SfLinearGauge>
        </div>
    }
</div>
<div>
    <button class="btn btn-close btn-outline-light btn-primary" @onclick="()=>ClosePage()"></button>
    <button class="btn btn-light btn-outline-info btn-dark"@onclick="()=>ToHomePage()">Back to Home Page</button>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private MetricInternal? metricInternal;
    protected async override Task OnInitializedAsync()
    {
        metricInternal = await metricInternalData.GetMetricInternalByInternalId(Id);
    }
        private void ClosePage()
    {
        navManager.NavigateTo($"/metricinternal");
    }
    private void ToHomePage()
    {
        navManager.NavigateTo($"/");
    }
}
