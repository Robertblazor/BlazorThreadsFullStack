@page "/drafter/standardexternal/{Id:int}"
@inject IStandardExternalCollection standardExternalData
@inject NavigationManager navManager
@attribute [Authorize]
<h1 class="page-heading text-center">
    Drafter's Page for Standard External Threads Info Check
</h1>
<h1 class="text-center">
    @standardExternal.CustomThreadDesignition @standardExternal.Classification
</h1>
<h3 class="accordion-body">
    More info & functions can be added to this page with coordination with Quality Planning & Drafting Department
</h3>
<div>
    @if(standardExternal is not null)
    {
        <div>
            <table class="table table-dark table-striped table border-2 table-bordered">
                <thead>
                    <tr class="text-center">
                        <th scope="col">Unit System</th>
                        <th scope="col">Max Major Diameter</th>
                        <th scope="col">Min Major Diameter</th>
                        <th scope="col">Max Pitch Diameter</th>
                        <th scope="col">Min Pitch Diameter</th>
                        <th scope="col">Max Minor Diameter</th>
                        <th scope="col">Min Minor Diameter</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="text-center">
                        <th scope="col">English System</th>
                        <th scope="col">@standardExternal.MajorDiaMax</th>
                        <th scope="col">@standardExternal.MajorDiaMin</th>
                        <th scope="col">@standardExternal.PitchDiaMax</th>
                        <th scope="col">@standardExternal.PitchDiaMin</th>
                        <th scope="col">@standardExternal.MinorDiaMax</th>
                        <th scope="col">@standardExternal.MinorDiaMin</th>
                    </tr>
                    <tr class="text-center">
                        <th scope="col">Metric System</th>
                        <th scope="col">@(standardExternal.MajorDiaMax*25.4)</th>
                        <th scope="col">@(standardExternal.MajorDiaMin*25.4)</th>
                        <th scope="col">@(standardExternal.PitchDiaMax*25.4)</th>
                        <th scope="col">@(standardExternal.PitchDiaMin*25.4)</th>
                        <th scope="col">@(standardExternal.MinorDiaMax*25.4)</th>
                        <th scope="col">@(standardExternal.MinorDiaMin*25.4)</th>
                    </tr>
                </tbody>
            </table>
        </div>
        <div>
            <table class="table table-dark table progress-bar-striped table-bordered table-border-2">
                <thead>
                    <tr class="text-center">
                        <th scope="col">Unit System</th>
                        <th scope="col">Min Chamfer Size</th>
                        <th scope="col">Max Chamfer Size</th>
                        <th scope="col">Bar Size Minimum</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="text-center">
                        <th scope="col">English System</th>
                        <th scope="col">@Math.Max(Math.Round(standardExternal.MinorDiaMax- 0.08,4),0)</th>
                        <th scope="col">@Math.Round(standardExternal.MinorDiaMax-0.01,4)</th>
                        <th scope="col">@Math.Round(standardExternal.MajorDiaMin,4)</th>
                    </tr>
                </tbody>
                <tbody>
                    <tr class="text-center">
                        <th scope="col">Metric System</th>
                        <th scope="col">@Math.Max(Math.Round((standardExternal.MinorDiaMax - 0.08)*25.4,2),0)</th>
                        <th scope="col">@Math.Round(25.4*standardExternal.MinorDiaMax - 0.01,2)</th>
                        <th scope="col">@Math.Round(standardExternal.MajorDiaMax*25.4,2)</th>
                    </tr>
                </tbody>
            </table>
        </div>
    }
</div>
<div>
    <button class="btn btn-close btn-outline-light btn-primary" @onclick="()=>ClosePage()"></button>
    <button class="btn btn-light btn-outline-info btn-dark"@onclick="()=>ToHomePage()">Back to Home Page</button>
</div>
@code {
    [Parameter]
    public int Id { get; set; }
    private StandardExternal standardExternal;
    protected async override Task OnInitializedAsync()
    {
        standardExternal = await standardExternalData.GetStandardExternalByInternalIdAsync(Id);
    }
    private void ClosePage()
    {
        navManager.NavigateTo($"/standardexternal");
    }
    private void ToHomePage()
    {
        navManager.NavigateTo($"/");
    }
}

